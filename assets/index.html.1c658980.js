import{_ as d,o as t,c as r,a as e,b as i,d as n,e as a,r as o}from"./app.937cc910.js";const l={},c=n(`<h1 id="codesniffer" tabindex="-1"><a class="header-anchor" href="#codesniffer" aria-hidden="true">#</a> CodeSniffer</h1><p>Tool used to enforce coding standard and conventions.</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><h3 id="mac-os-install" tabindex="-1"><a class="header-anchor" href="#mac-os-install" aria-hidden="true">#</a> Mac OS Install</h3><p>Use below command which requires brew to be installed.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>brew install php-code-sniffer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="windows-install" tabindex="-1"><a class="header-anchor" href="#windows-install" aria-hidden="true">#</a> Windows Install</h3><p>Use composer to install codesniffer.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>composer global require &quot;squizlabs/php_codesniffer=*&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="setup-default-standard" tabindex="-1"><a class="header-anchor" href="#setup-default-standard" aria-hidden="true">#</a> Setup default standard</h2><p>To check which coding standards are available use the following...</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs -i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To set a default standard use the following command...</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --config-set default_standard PSR12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can now check the default standard...</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --config-show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2>`,17),h=a("Full list of commands can be found at "),u={href:"https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage",target:"_blank",rel:"noopener noreferrer"},p=a("CS usage Wiki page"),f=a("."),g=n(`<h3 id="basic-commands" tabindex="-1"><a class="header-anchor" href="#basic-commands" aria-hidden="true">#</a> Basic commands</h3><p>Check version.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Run codesniffer replacing [directory to sniff] with path to codebase.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs [directory to sniff]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Run codesniffer with specific standard, replace [directory to sniff] with path to codebase.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --standard=PSR1 [directory to sniff]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Get a summary of errors and warnings, replace [directory to sniff] with path to codebase.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --report=summary [directory to sniff]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>List installed coding standards.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs -i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="automatically-fix-issues" tabindex="-1"><a class="header-anchor" href="#automatically-fix-issues" aria-hidden="true">#</a> Automatically fix issues</h3><p>PHP CodeSniffer includes PHP Code Beautifier and Fixer (phpcbf) which can be used to automatically fix specific issues. CS can tell you which issues are fixable with phpcbf.</p><p>Run phpcbf replacing [directory to sniff] with path to codebase.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcbf [directory to sniff]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="config-commands" tabindex="-1"><a class="header-anchor" href="#config-commands" aria-hidden="true">#</a> Config commands</h3><p>Show config.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --config-show
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Set default coding standard.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>phpcs --config-set default_standard PSR2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Command list for config file.</p>`,21),m={href:"https://github.com/squizlabs/PHP_CodeSniffer/wiki/Configuration-Options#setting-the-default-coding-standard",target:"_blank",rel:"noopener noreferrer"},v=a("CS config Wiki page"),b=e("h2",{id:"links",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#links","aria-hidden":"true"},"#"),a(" Links")],-1),x={href:"https://www.php-fig.org/blog/2019/09/new-blog-psr-12-approval",target:"_blank",rel:"noopener noreferrer"},_=a("PSR-12 blog"),w={href:"https://webdevetc.com/programming-tricks/php/general-php/what-are-php-s-psrs",target:"_blank",rel:"noopener noreferrer"},k=a("PSR guide"),S={href:"https://siderlabs.com/blog/5-php-coding-standards-you-will-love-and-how-to-use-them-adf6a4855696",target:"_blank",rel:"noopener noreferrer"},y=a("How to use PSRs");function P(C,R){const s=o("ExternalLinkIcon");return t(),r("div",null,[c,e("p",null,[h,e("a",u,[p,i(s)]),f]),g,e("p",null,[e("a",m,[v,i(s)])]),b,e("p",null,[e("a",x,[_,i(s)])]),e("p",null,[e("a",w,[k,i(s)])]),e("p",null,[e("a",S,[y,i(s)])])])}var B=d(l,[["render",P],["__file","index.html.vue"]]);export{B as default};
